---
- name: Configure Docker on EC2 Instances
  hosts: all
  become: true
  connection: ssh

  tasks:

    - name: Remove conflicting containerd packages
      apt:
        name:
          - containerd
          - containerd.io
        state: absent
        purge: yes
        autoremove: yes

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker CE and containerd.io
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Ensure Docker service is started and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Wait for Docker daemon to be ready
      shell: docker info
      register: docker_ready
      retries: 5
      delay: 3
      until: docker_ready.rc == 0

    - name: Check if a container named 'banking-me' exists
      shell: docker ps -a --filter "name=^/banking-me$" --format "{{'{{'}}.ID{{'}}'}}"
      register: container_id_result
      changed_when: false
      ignore_errors: true

    - name: Restart existing container if it exists
      shell: docker restart banking-me
      when: container_id_result.stdout is defined and container_id_result.stdout | length > 0
      ignore_errors: true

    - name: Run new container if not already running
      docker_container:
        name: banking-me
        image: akash2423/banking-me:v1
        state: started
        restart_policy: always
        published_ports:
          - "8084:8081"
      when: container_id_result.stdout is not defined or container_id_result.stdout | length == 0
